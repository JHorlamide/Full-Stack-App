{"version":3,"sources":["store/Actions/authActions.js","Components/Layout/SignedInLinks.js","Components/Layout/SignedOutLinks.js","Components/Layout/Navbar.js","Components/Dashbord/Notifications.js","Components/Projects/ProjectSummary.js","Components/Projects/ProjectList.js","Components/Dashbord/Dashboard.js","Components/Projects/ProjectDetails.js","Components/Auth/SignedIn.js","Components/Auth/SignedUp.js","Components/Projects/CreateProject.js","store/Actions/projectActions.js","App.js","serviceWorker.js","Reducers/authReducer.js","Reducers/projectReducer.js","Reducers/rootReducer.js","Config/fbConfig.js","index.js"],"names":["signUp","newUser","dispatch","getState","getFirebase","getFirestore","firebase","firestore","auth","createUserWithEmailAndPassword","email","password","then","res","collection","doc","user","uid","set","firstName","lastName","initials","type","catch","err","connect","signOut","props","className","to","onClick","profile","SignedOutLinks","state","console","log","Links","Notification","notifications","map","item","key","id","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","cla","createAt","toString","calendar","ProjectList","projects","compose","ordered","firestoreConnect","orderBy","limit","Notifications","ownProps","match","params","data","authError","signIn","creds","credentials","signInWithEmailAndPassword","useState","setSignIn","handleChange","e","target","value","onSubmit","preventDefault","htmlFor","onChange","signup","setSignup","createProject","authorId","add","Date","createProj","setcreateProj","history","push","App","exact","path","component","Dashboard","ProjectDetails","SignIn","SignUp","CreateProject","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","userFirestoreForProfile","userProfile","attachAuthIsReady","rrfProps","config","useFirestoreForProfile","updateProfileOnLogin","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.b78658a3.chunk.js","sourcesContent":["/*** SIGNIN USER ***/ \r\nexport const signIn = (credentials) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\n/***  LOGOUT USER ***/ \r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\n/*** LOGIN USER ***/ \r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((res) => {\r\n        return firestore.collection(\"users\").doc(res.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: `${newUser.firstName[0]}${newUser.lastName[0]}`\r\n          })\r\n          .then(() => {\r\n            dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n          })\r\n          .catch((err) => {\r\n            dispatch({ type: \"SIGNUP_ERROR\", err });\r\n          });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from \"../../store/Actions/authActions\";\r\n\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <Link to='/signin' onClick={() => {props.signOut();}}>Log Out</Link>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => { dispatch(signOut()) }\r\n  }\r\n};\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Signup</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">Login</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n/*** Custom Component ***/\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\n\r\nconst NavBar = (props) => {\r\n  // console.log('From Navbar: ',props)\r\n  const { auth, profile } = props;\r\n  // console.log(auth);\r\n  const Links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />;\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          MarioPlan\r\n        </Link>\r\n        {Links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state)\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavBar);\r\n","import React from \"react\";\r\nimport moment from 'moment';\r\n\r\nconst Notification = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notification\">\r\n            {notifications && notifications.map((item) => {\r\n              return (\r\n                <li key={item.id}>\r\n                  <span className='pink-text'>{item.user} </span>\r\n                  <span>{item.content}</span>\r\n                  <div className='grey-text'>\r\n                    {moment(item.time.toDate()).fromNow}\r\n                  </div>\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n  return (\r\n    <div className=\"card project-summary \">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>Posted by {`${project.authorFirstName} ${project.authorLastName}`}</p>\r\n        <p cla=\"grey-text\">{moment(project.createAt.toDate().toString()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  // const newPorjects = projects;\r\n  // const latestprojects = newPorjects ?(\r\n  //   newPorjects.map((project) => {\r\n  //     return (\r\n  //       <div key={project.id}>\r\n  //         <ProjectSummary project={project} key={project.id}/>\r\n  //       </div>\r\n  //     )\r\n  //   })\r\n  // ) : (\r\n  //     <div className='container'>You do not have any project left... </div>\r\n  // );\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&\r\n        projects.map((project) => {\r\n          return (\r\n            <Link to={`/project/${project.id}`} key={project.id}>\r\n              <ProjectSummary project={project} key={project.id} />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\n/*** FirestoreConnect to connect to a single collection in the database collections ***/\r\n\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\n/*** Custom Component from PorjectList and Notifications ***/\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../Projects/ProjectList\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Dashboard = (props) => {\r\n  const { projects, auth, notifications } = props;\r\n  if (!auth.uid) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard container\">\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m6\">\r\n          <ProjectList projects={projects} />\r\n        </div>\r\n        <div className=\"col s12 m5\">\r\n          <Notifications notifications={notifications} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.firestore.ordered.project,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"project\", orderBy: [\"createAt\", 'desc'] },\r\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", 'desc'] },\r\n  ])\r\n)(Dashboard);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project, auth } = props;\r\n  if (!auth.uid) {\r\n    return (\r\n      <Redirect to='/signin' />\r\n    )\r\n  };\r\n  \r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card\">\r\n          <div className=\"card-content\">\r\n            <h5 className=\"cardotitle\">{project.title}</h5>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action gret lighten-4 grey-text\">\r\n            <div>\r\n              Posted by {`${project.authorFirstName} ${project.authorLastName}`}\r\n            </div>\r\n            <div>{moment(project.createAt.toDate().toString()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading Project...</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.project\r\n  const project = projects ? projects[id] : null\r\n  return {\r\n    project,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"project\" }])\r\n)(ProjectDetails);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/Actions/authActions\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst SignedUp = (props) => {\r\n  const [signIn, setSignIn] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setSignIn({\r\n      ...signIn,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.signIn(signIn);\r\n  };\r\n\r\n  const { authError, auth } = props;\r\n\r\n  if (auth.uid) {\r\n    return (\r\n      <Redirect to='/'/>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"white\" onSubmit={handleSubmit}>\r\n        <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input type=\"email\" id=\"email\" onChange={handleChange} />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" onChange={handleChange} />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n        </div>\r\n        <div className=\"red-text center\">\r\n          {authError ? <p>{authError}</p> : null}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedUp);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport  {signUp}  from \"../../store/Actions/authActions\";\r\n\r\nconst SignedUp = (props) => {\r\n  const [signup, setSignup] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setSignup({\r\n      ...signUp,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.signup(signup);\r\n  };\r\n\r\n  const { auth, authError } = props;\r\n  if (auth.uid) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"white\" onSubmit={handleSubmit}>\r\n        <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input type=\"email\" id=\"email\" onChange={handleChange} />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" onChange={handleChange} />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"lastName\">First Name</label>\r\n          <input type=\"text\" id=\"lastName\" onChange={handleChange} />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"firstName\">Last Name</label>\r\n          <input type=\"text\" id=\"firstName\" onChange={handleChange} />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>\r\n        </div>\r\n        <div className=\"red-text center\">\r\n          {authError ? <p>{authError}</p> : null}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signup: (newUser) => dispatch(signUp(newUser)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedUp);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../store/Actions/projectActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst CreateProject = (props) => {\r\n  const [createProj, setcreateProj] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setcreateProj({\r\n      ...createProj,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(createProj);\r\n    props.createProject(createProj);\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  const { auth } = props;\r\n  if (!auth.uid) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"white\" onSubmit={handleSubmit}>\r\n        <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input type=\"text\" id=\"title\" onChange={handleChange} />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"content\">Project Content</label>\r\n          <textarea\r\n            id=\"content\"\r\n            onChange={handleChange}\r\n            className=\"materialize-textarea\"\r\n          ></textarea>\r\n\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => {\r\n      dispatch(createProject(project));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    //Make a async call to the database\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n\r\n    firestore.collection('project').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_PROJECT', project })\r\n    }).catch((err) => {\r\n      dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n    });\r\n  };\r\n};","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n/*** Custom Component ***/\nimport NavBar from \"./Components/Layout/Navbar\";\nimport Dashboard from \"./Components/Dashbord/Dashboard\";\nimport ProjectDetails from \"./Components/Projects/ProjectDetails\";\nimport SignIn from \"./Components/Auth/SignedIn\";\nimport SignUp from \"./Components/Auth/SignedUp\";\nimport CreateProject from './Components/Projects/CreateProject';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"\">\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path='/create' component={CreateProject}/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n  authError: null,\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"login error\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message,\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"Login success\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"signout success\");\r\n      return state;\r\n\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"signup error\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message,\r\n      };\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    {\r\n      id: \"1\",\r\n      title: \"Help Me Find Peach\",\r\n      content: \"Finding the peach is very easy, just look aroun you properly.\",\r\n    },\r\n    {\r\n      id: \"2\",\r\n      title: \"Collect All The Stars\",\r\n      content: \"The collection the all the stars war worrior is in progress.\",\r\n    },\r\n    {\r\n      id: \"3\",\r\n      title: \"Egg Hunt With Olamide\",\r\n      content: \"They said there is also egg hunting, let find out.\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"Created Project: \", action.project);\r\n      return state;\r\n    \r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"create project error\", action.err);\r\n      return state;\r\n    \r\n    default: \r\n      return state\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\n/*** FirestoreReducer for syncing our data to the database data ***/\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\n/*** Custom Component ***/ \r\nimport authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBK-0DaLaDdQrXxcejbccvJvVbopYOx2Ig\",\r\n  authDomain: \"marioplan-bc43b.firebaseapp.com\",\r\n  databaseURL: \"https://marioplan-bc43b.firebaseio.com\",\r\n  projectId: \"marioplan-bc43b\",\r\n  storageBucket: \"marioplan-bc43b.appspot.com\",\r\n  messagingSenderId: \"229945211445\",\r\n  appId: \"1:229945211445:web:4ea9ba6204be4b9a93cf7c\",\r\n  measurementId: \"G-MWYEB88VG6\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport default firebase;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n/*** Setting up redux store ***/\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider, useSelector } from \"react-redux\";\nimport rootReducer from \"./Reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport {\n  createFirestoreInstance,\n  getFirestore,\n  reduxFirestore,\n} from \"redux-firestore\";\nimport {\n  ReactReduxFirebaseProvider,\n  getFirebase,\n  isLoaded,\n} from \"react-redux-firebase\";\nimport fbConfig from \"./Config/fbConfig\";\nimport firebase from \"firebase/app\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase, fbConfig, {userFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n  )\n);\n\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  updateProfileOnLogin: false\n};\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  fbConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nconst AuthIsLoaded = ({ children }) => {\n  const auth = useSelector((state) => state.firebase.auth);\n  if (!isLoaded(auth)) {\n    return <div className='center blue-text'>Loading...</div>;\n  }\n  return children;\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}